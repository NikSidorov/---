import requests
import json
from telebot import types
import sqlite3
from config import bot, API_openweathermap


@bot.message_handler(commands=['start'], content_types=['text'])
def welcome(message):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ,
    –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö users.bd –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –∏ –∏–º—è,
    –ø–æ—Å–ª–µ —á–µ–≥–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –µ–≥–æ –≥–æ—Ä–æ–¥.
    """

    markup = types.ReplyKeyboardMarkup()
    moscow = types.KeyboardButton('–ú–æ—Å–∫–≤–∞')
    spb = types.KeyboardButton('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')
    markup.row(moscow, spb)
    sochi = types.KeyboardButton('–°–æ—á–∏')
    russa = types.KeyboardButton('–°—Ç–∞—Ä–∞—è –†—É—Å—Å–∞')
    kotlas = types.KeyboardButton('–ö–æ—Ç–ª–∞—Å')
    markup.row(sochi, kotlas, russa)

    image = 'weather_icons.jpg'
    image_file = open('Img/' + image, 'rb')
    bot.send_photo(message.chat.id, image_file)
    image_file.close()

    conn = sqlite3.connect('./users.db', check_same_thread=False)
    cursor = conn.cursor()

    us_id = message.from_user.id

    us_name = message.from_user.first_name
    cursor.execute('INSERT OR REPLACE INTO users (user_id, user_name) '
                   'VALUES (?, ?)',
                   (us_id, us_name))
    conn.commit()
    cursor.close()
    mem = message.from_user.username

    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {us_name}! \n"
                                      "–ó–∞–ø–æ–º–Ω–∏, –∞ —Ç–æ –∑–∞–±—É–¥–µ—à—å: —è - –±–æ—Ç, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã.\n"
                                      "–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ú–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤:",
                     reply_markup=markup)
    bot.register_next_step_handler(message, clicker)


def clicker(message):
    get_weather(message)


@bot.message_handler(content_types=['text'])
def get_weather(message):
    """
    –§—É–Ω–∫—Ü–∏—è, –ø–æ–ª—É—á–∞—é—â–∞—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç API.
    –¢–∞–∫–∂–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –µ–≥–æ (–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫)
    –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö users.bd
    —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, —Å–¥–µ–ª–∞–≤—à–µ–º –∑–∞–ø—Ä–æ—Å.
    """

    city = message.text.strip().lower()
    weather_json = requests.get(
        f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_openweathermap}&units=metric')

    if weather_json.status_code == 200:

        data = json.loads(weather_json.text)

        json.dump(data, open("weather_from_API.json", 'w'))

        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º üå°Ô∏è', callback_data='temp'))
        markup.add(types.InlineKeyboardButton('–í–ª–∞–∂–Ω–æ—Å—Ç—å üí¶', callback_data='humid'))
        markup.add(types.InlineKeyboardButton('–°–∏–ª–∞ –≤–µ—Ç—Ä–∞ üå™Ô∏è', callback_data='wind'))
        markup.add(types.InlineKeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëÄ', callback_data='all'))

        bot.reply_to(message, '–ö–∞–∫–∞—è –∏–º–µ–Ω–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ', reply_markup=markup)

        conn = sqlite3.connect('./users.db', check_same_thread=False)
        cursor = conn.cursor()
        us_id = message.from_user.id
        us_name = message.from_user.first_name
        temp = data["main"]["temp"]
        temp_feels_like = data["main"]["feels_like"]
        humid = data["main"]["humidity"]
        wind = data["wind"]["speed"]
        all_info = str(data)

        cursor.execute(
            'INSERT OR REPLACE INTO users (user_id, user_name, temp, temp_feels_like, humid, wind, all_info) '
            'VALUES (?, ?, ?, ?, ?, ?, ?)', (us_id, us_name, temp, temp_feels_like, humid, wind, all_info))
        conn.commit()

        precipitation = data["weather"][0]["main"]

        if precipitation == 'Rain':
            precipitation_img = 'rain.gif'
        elif precipitation == 'Clouds':
            precipitation_img = 'clouds.gif'
        elif precipitation == 'Clear':
            precipitation_img = 'sunny.gif'
        elif precipitation == 'Thunderstorm':
            precipitation_img = 'thunderstorm.gif'
        elif precipitation == 'Snow':
            precipitation_img = 'snow.gif'
        else:
            precipitation_img = 'joke.jpg'

        image_file = open('Gif/' + precipitation_img, 'rb')
        bot.send_animation(message.chat.id, image_file)
        image_file.close()

    else:
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –ó–µ–º–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, '
                                          '–Ω–æ –Ω–µ –æ—Ç—á–∞–∏–≤–∞–π—Å—è, –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –µ—â—ë —Ä–∞–∑ '
                                          '–∏–ª–∏ –≤–≤–µ–¥–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥.')


@bot.message_handler(content_types=['text'])
def get_temperature(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –∏–∑ –ë–î users.bd
    """
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–í–ª–∞–∂–Ω–æ—Å—Ç—å üí¶', callback_data='humid'))
    markup.add(types.InlineKeyboardButton('–°–∏–ª–∞ –≤–µ—Ç—Ä–∞ üå™Ô∏è', callback_data='wind'))
    markup.add(types.InlineKeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëÄ', callback_data='all'))

    conn = sqlite3.connect('./users.db', check_same_thread=False)
    cursor = conn.cursor()

    us_id = message.chat.id

    cursor.execute(f'SELECT temp, temp_feels_like FROM users WHERE user_id ={us_id}')
    info = cursor.fetchall()
    conn.commit()
    cursor.close()

    bot.reply_to(message, f'–°–µ–π—á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º: {info[0][0]} ¬∞C\n'
                          f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {info[0][1]} ¬∞C\n')

    bot.send_message(message.chat.id, '–ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë? ', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_humidity(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –∏–∑ –ë–î users.bd
    """
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º üå°Ô∏è', callback_data='temp'))
    markup.add(types.InlineKeyboardButton('–°–∏–ª–∞ –≤–µ—Ç—Ä–∞ üå™Ô∏è', callback_data='wind'))
    markup.add(types.InlineKeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëÄ', callback_data='all'))

    conn = sqlite3.connect('./users.db', check_same_thread=False)
    cursor = conn.cursor()

    us_id = message.chat.id

    cursor.execute(f'SELECT humid FROM users WHERE user_id ={us_id}')

    info = cursor.fetchall()

    conn.commit()
    cursor.close()
    bot.reply_to(message, f'–°–µ–π—á–∞—Å –≤–ª–∞–∂–Ω–æ—Å—Ç—å: {info[0][0]}%\n')
    bot.send_message(message.chat.id, '–ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë? ', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_wind(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ—Ç—Ä–∞ –∏–∑ –ë–î users.bd
    """
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º üå°Ô∏è', callback_data='temp'))
    markup.add(types.InlineKeyboardButton('–í–ª–∞–∂–Ω–æ—Å—Ç—å üí¶', callback_data='humid'))
    markup.add(types.InlineKeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëÄ', callback_data='all'))

    conn = sqlite3.connect('./users.db', check_same_thread=False)
    cursor = conn.cursor()

    us_id = message.chat.id

    cursor.execute(f'SELECT wind FROM users WHERE user_id ={us_id}')

    info = cursor.fetchall()

    conn.commit()
    cursor.close()
    bot.reply_to(message, f'–°–µ–π—á–∞—Å —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {info[0][0]} –º/—Å.\n')
    bot.send_message(message.chat.id, '–ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë? ', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_all_info(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ –∏–∑ –ë–î users.bd
    """

    conn = sqlite3.connect('./users.db', check_same_thread=False)
    cursor = conn.cursor()

    us_id = message.chat.id

    cursor.execute(f'SELECT temp, temp_feels_like, humid, wind FROM users WHERE user_id ={us_id}')

    info = cursor.fetchall()

    conn.commit()
    cursor.close()
    bot.reply_to(message, f'–°–µ–π—á–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º: {info[0][0]} ¬∞C\n'
                          f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {info[0][1]} ¬∞C\n\n'
                          f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {info[0][2]}%\n'
                          f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {info[0][3]} –º/—Å')
    bot.send_message(message.chat.id, '–ù–∞–¥–µ—é—Å—å, —á—Ç–æ –ø–æ–≥–æ–¥–∞ –Ω–µ –∏—Å–ø–æ—Ä—Ç–∏—Ç —Ç–µ–±–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! ü§î\n')


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    """ –ö–ª–∏–∫–µ—Ä –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫"""

    if call.data == "temp":
        data = json.load(open("weather_from_API.json"))
        res = get_temperature(call.message)

    elif call.data == "humid":
        data = json.load(open("weather_from_API.json"))
        res = get_humidity(call.message)

    elif call.data == "wind":
        data = json.load(open("weather_from_API.json"))
        res = get_wind(call.message)

    elif call.data == "all":
        data = json.load(open("weather_from_API.json"))
        res = get_all_info(call.message)


bot.infinity_polling()
